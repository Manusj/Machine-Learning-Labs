setwd("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 3")
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 3/neuralNetworks.R", echo=TRUE)
linear <- function(x) ifelse(x>=0,x,0)
relu <- function(x) ifelse(x>=0,x,0)
nn_relu <- neuralnet(Sin ~ var, train, hidden = 10, linear.output=TRUE, act.fct = relu)
predict_test_relu <- predict(nn_relu, newdata=test)
nn_softplus <- neuralnet(Sin ~ var, train, hidden = 10, linear.output=TRUE, act.fct = softplus)
predict_test_softplus <- predict(nn_softplus, newdata=test)
plot(test[,1], test[,2], cex = 2, xlab="Sample Value", ylab = "Sine of Sample Values")
points(test[,1], predict_test_linear, col = "blue")
points(test[,1], predict_test_relu, col = "red")
points(test[,1], predict_test_softplus, col = "green")
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 3/neuralNetworks.R", echo=TRUE)
nn_relu <- neuralnet(Sin ~ var, train, hidden = 10, linear.output=TRUE, act.fct = relu)
predict_test_relu <- predict(nn_relu, newdata=test)
plot(test[,1], test[,2], cex = 2, xlab="Sample Value", ylab = "Sine of Sample Values")
points(test[,1], predict_test_linear, col = "blue")
points(test[,1], predict_test_relu, col = "red")
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 3/neuralNetworks.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 3/neuralNetworks.R", echo=TRUE)
# Plot of the training data (black), test data (blue), and predictions (red)
plot(train[,1],train[,2], cex=3, xlab="Sample Value", ylab = "Sine of Sample Values")
points(test[,1], test[,2], col = "blue", cex=1)
points(test[,1], pred_test, col="red", cex=1)
legend("bottomleft",fill=c("black","blue","red"), legend=c("Train data point","Test data points"
,"Predication Points"),bty="n")
nn_relu <- neuralnet(Sin ~ var, train, hidden = 10, linear.output=TRUE, act.fct = relu)
predict_test_relu <- predict(nn_relu, newdata=test)
nn_linear <- neuralnet(Sin ~ var, train, hidden = 10, linear.output=TRUE, act.fct = linear)
predict_test_linear <- predict(nn_linear, newdata=test)
nn_relu <- neuralnet(Sin ~ var, train, hidden = 10, linear.output=TRUE, act.fct = relu)
predict_test_relu <- predict(nn_relu, newdata=test)
nn_softplus <- neuralnet(Sin ~ var, train, hidden = 10, linear.output=TRUE, act.fct = softplus)
predict_test_softplus <- predict(nn_softplus, newdata=test)
plot(test[,1], test[,2], cex = 2, xlab="Sample Value", ylab = "Sine of Sample Values")
points(test[,1], predict_test_linear, col = "blue")
points(test[,1], predict_test_relu, col = "red")
points(test[,1], predict_test_softplus, col = "green")
legend("bottomleft",fill=c("black","blue","red", "green"), legend=c("Actual Test data point",
"Linear Prediction","Relu Prediction","Softplus Prediction"),bty="n")
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 3/neuralNetworks.R", echo=TRUE)
nn_linear <- neuralnet(Sin ~ var, train, hidden = 10, linear.output=TRUE, act.fct = linear)
predict_test_linear <- predict(nn_linear, newdata=test)
nn_relu <- neuralnet(Sin ~ var, train, hidden = 10, linear.output=TRUE, act.fct = relu)
predict_test_relu <- predict(nn_relu, newdata=test)
nn_softplus <- neuralnet(Sin ~ var, train, hidden = 10, linear.output=TRUE, act.fct = softplus)
predict_test_softplus <- predict(nn_softplus, newdata=test)
plot(test[,1], test[,2], cex = 2, xlab="Sample Value", ylab = "Sine of Sample Values")
points(test[,1], predict_test_linear, col = "blue")
points(test[,1], predict_test_relu, col = "red")
points(test[,1], predict_test_softplus, col = "green")
legend("bottomleft",fill=c("black","blue","red", "green"), legend=c("Actual Test data point",
"Linear Prediction","Relu Prediction","Softplus Prediction"),bty="n")
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 3/Kernal_methords.R", echo=TRUE)
