source("~/Downloads/1637363859386_k nearest neighbour.R", echo=TRUE)
source("~/Downloads/k nearest neighbour.R", echo=TRUE)
setwd("~/Downloads")
source("~/Downloads/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
setwd("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1")
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
View(klist_train)
View(klist_valid)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
View(train_model)
View(train_model_k)
View(train_model)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
View(train_model)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
View(logistic)
View(DF)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
View(dataset_parkinsons)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
View(train_dataset)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
test_dataset <- data.frame(dataset_parkinsons[-id,])
# Part 2 of Assignment 2
# Creating a linear regression model with all voice characteristics as parameters and motor_UPDRS as the output
linearRegression_model <- lm(motor_UPDRS ~ 0+Jitter...+Jitter.Abs.+Jitter.RAP+Jitter.PPQ5+Jitter.DDP+Shimmer+Shimmer.dB.+Shimmer.APQ3+Shimmer.APQ5 +Shimmer.APQ11+Shimmer.DDA+NHR+HNR+RPDE+DFA+PPE,data = train_dataset)
summary(linearRegression_model)
# calculating Mean Squared error of train and test sets
testset_predictions <- predict(linearRegression_model, test_dataset)
train_mse <- mean((train_dataset$motor_UPDRS - predict(linearRegression_model)) ^ 2)
test_mse <- mean((test_dataset$motor_UPDRS - testset_predictions) ^ 2)
print(train_mse)
loglikelihood <- function(sigma, theta){
n <- dim(train_dataset)[1]
theta <- t(as.matrix(theta))
input_data <- t(as.matrix(train_dataset[,7:22]))
prediction <- theta %*% input_data
se <- sum((train_dataset$motor_UPDRS - prediction) ^ 2)
return (-(((n/2)*log(2*pi*(sigma^2)))+((1/(2*(sigma^2)))*se)))
}
Ridge <- function(params, lambda){
sigma <- params[1]
theta <- params[-1]
negativemodel_loglikelihood <- -(loglikelihood(sigma, theta))
return (negativemodel_loglikelihood+(lambda * (sum(theta^2))))
}
RidgeOpt <- function(lambda, thetha, sigma)
{
optimization_variables <- c(sigma, thetha)
optim_par <- optim(par = optimization_variables,
fn = Ridge,
lambda =lambda,
method="BFGS")
return (optim_par$par[-1])
}
DF <- function(lambda){
x <- as.matrix(train_dataset[,7:22])
P <- x%*%(solve((t(x) %*% x)+lambda))%*%t(x)
print(sum(diag(P)))
}
intial_weights = coefficients(linearRegression_model)
initial_dispersion = sd(residuals(linearRegression_model))
optimisedWeight_lambda1 = t(as.matrix(RidgeOpt(1, intial_weights, initial_dispersion)))
optimisedWeight_lambda100 = t(as.matrix(RidgeOpt(100, intial_weights, initial_dispersion)))
optimisedWeight_lambda1000 = t(as.matrix(RidgeOpt(1000, intial_weights, initial_dispersion)))
train_data_martix = t(as.matrix(train_dataset[,7:22]))
test_data_matrix = t(as.matrix(test_dataset[,7:22]))
predictions_lambda1_traindata = (optimisedWeight_lambda1 %*% train_data_martix)
predictions_lambda1_testdata = (optimisedWeight_lambda1 %*% test_data_matrix)
predictions_lambda100_traindata = (optimisedWeight_lambda100 %*% train_data_martix)
predictions_lambda100_testdata = (optimisedWeight_lambda100 %*% test_data_matrix)
predictions_lambda1000_traindata = (optimisedWeight_lambda1000 %*% train_data_martix)
predictions_lambda1000_testdata = (optimisedWeight_lambda1000 %*% test_data_matrix)
trainingMse_lambda1 = mean((train_dataset$motor_UPDRS - predictions_lambda1_traindata) ^ 2)
testMse_lambda1 = mean((test_dataset$motor_UPDRS - predictions_lambda1_testdata) ^ 2)
trainingMse_lambda100 = mean((train_dataset$motor_UPDRS - predictions_lambda100_traindata) ^ 2)
testMse_lambda100 = mean((test_dataset$motor_UPDRS - predictions_lambda100_testdata) ^ 2)
trainingMse_lambda1000 = mean((train_dataset$motor_UPDRS - predictions_lambda1000_traindata) ^ 2)
testMse_lambda1000 = mean((test_dataset$motor_UPDRS - predictions_lambda1000_testdata) ^ 2)
print(train_mse)
print(test_mse)
print(trainingMse_lambda1)
print(testMse_lambda1)
DF(1)
print(trainingMse_lambda100)
print(testMse_lambda100)
DF(100)
print(trainingMse_lambda1000)
print(testMse_lambda1000)
DF(1000)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
View(test_dataset)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
dataset_parkinsons <- scale(dataset_parkinsons)
# Splitting scaled data to 60% training and 40% test
n <- dim(dataset_parkinsons)[1]
set.seed(12345)
id <- sample(1:n, floor(n*0.6))
train_dataset <- data.frame(dataset_parkinsons[id,])
test_dataset <- data.frame(dataset_parkinsons[-id,])
# Part 2 of Assignment 2
# Creating a linear regression model with all voice characteristics as parameters and motor_UPDRS as the output
linearRegression_model <- lm(motor_UPDRS ~ 0+Jitter...+Jitter.Abs.+Jitter.RAP+Jitter.PPQ5+Jitter.DDP+Shimmer+Shimmer.dB.+Shimmer.APQ3+Shimmer.APQ5 +Shimmer.APQ11+Shimmer.DDA+NHR+HNR+RPDE+DFA+PPE,data = train_dataset)
summary(linearRegression_model)
# calculating Mean Squared error of train and test sets
testset_predictions <- predict(linearRegression_model, test_dataset)
train_mse <- mean((train_dataset$motor_UPDRS - predict(linearRegression_model)) ^ 2)
test_mse <- mean((test_dataset$motor_UPDRS - testset_predictions) ^ 2)
print(train_mse)
loglikelihood <- function(sigma, theta){
n <- dim(train_dataset)[1]
theta <- t(as.matrix(theta))
input_data <- t(as.matrix(train_dataset[,7:22]))
prediction <- theta %*% input_data
se <- sum((train_dataset$motor_UPDRS - prediction) ^ 2)
return (-(((n/2)*log(2*pi*(sigma^2)))+((1/(2*(sigma^2)))*se)))
}
Ridge <- function(params, lambda){
sigma <- params[1]
theta <- params[-1]
negativemodel_loglikelihood <- -(loglikelihood(sigma, theta))
return (negativemodel_loglikelihood+(lambda * (sum(theta^2))))
}
RidgeOpt <- function(lambda, thetha, sigma)
{
optimization_variables <- c(sigma, thetha)
optim_par <- optim(par = optimization_variables,
fn = Ridge,
lambda =lambda,
method="BFGS")
return (optim_par$par[-1])
}
DF <- function(lambda){
x <- as.matrix(train_dataset[,7:22])
P <- x%*%(solve((t(x) %*% x)+lambda))%*%t(x)
print(sum(diag(P)))
}
intial_weights = coefficients(linearRegression_model)
initial_dispersion = sd(residuals(linearRegression_model))
optimisedWeight_lambda1 = t(as.matrix(RidgeOpt(1, intial_weights, initial_dispersion)))
optimisedWeight_lambda100 = t(as.matrix(RidgeOpt(100, intial_weights, initial_dispersion)))
optimisedWeight_lambda1000 = t(as.matrix(RidgeOpt(1000, intial_weights, initial_dispersion)))
train_data_martix = t(as.matrix(train_dataset[,7:22]))
test_data_matrix = t(as.matrix(test_dataset[,7:22]))
predictions_lambda1_traindata = (optimisedWeight_lambda1 %*% train_data_martix)
predictions_lambda1_testdata = (optimisedWeight_lambda1 %*% test_data_matrix)
predictions_lambda100_traindata = (optimisedWeight_lambda100 %*% train_data_martix)
predictions_lambda100_testdata = (optimisedWeight_lambda100 %*% test_data_matrix)
predictions_lambda1000_traindata = (optimisedWeight_lambda1000 %*% train_data_martix)
predictions_lambda1000_testdata = (optimisedWeight_lambda1000 %*% test_data_matrix)
trainingMse_lambda1 = mean((train_dataset$motor_UPDRS - predictions_lambda1_traindata) ^ 2)
testMse_lambda1 = mean((test_dataset$motor_UPDRS - predictions_lambda1_testdata) ^ 2)
trainingMse_lambda100 = mean((train_dataset$motor_UPDRS - predictions_lambda100_traindata) ^ 2)
testMse_lambda100 = mean((test_dataset$motor_UPDRS - predictions_lambda100_testdata) ^ 2)
trainingMse_lambda1000 = mean((train_dataset$motor_UPDRS - predictions_lambda1000_traindata) ^ 2)
testMse_lambda1000 = mean((test_dataset$motor_UPDRS - predictions_lambda1000_testdata) ^ 2)
print(train_mse)
print(test_mse)
print(trainingMse_lambda1)
print(testMse_lambda1)
DF(1)
print(trainingMse_lambda100)
print(testMse_lambda100)
DF(100)
print(trainingMse_lambda1000)
print(testMse_lambda1000)
DF(1000)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Logistic Regression.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Downloads/ml1.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/k nearest neighbour.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
setwd("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1")
source("~/Desktop/Masters - LIU/Course/Sem 1/Period 2/TDDE01 - Machine Learning/Labs/Lab 1/Linear_Regression.R", echo=TRUE)
